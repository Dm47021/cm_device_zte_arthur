From 86e4caea1d9a90c21245ac0cd9d6fd036027f97e Mon Sep 17 00:00:00 2001
From: Romain Guy <romainguy@google.com>
Date: Thu, 27 Sep 2012 19:01:55 -0700
Subject: [PATCH 09/14] Plug memory leak that happens when reusing display
 lists Bug #7195815

We did not reclaim resources when reusing an existing DisplayList to
record a new empty list of commands. This would lead to various memory
leaks: bitmaps, paints, paths, matrices, etc.

This is not a common case but some apps run into this situation,
such as Launcher.

Change-Id: I2eb14ac86a212123f8edbe42b70a7c1c51fa4145

Conflicts:
	libs/hwui/DisplayListRenderer.cpp
---
 libs/hwui/DisplayListRenderer.cpp | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/libs/hwui/DisplayListRenderer.cpp b/libs/hwui/DisplayListRenderer.cpp
index a042a67..b2c922f 100644
--- a/libs/hwui/DisplayListRenderer.cpp
+++ b/libs/hwui/DisplayListRenderer.cpp
@@ -144,6 +144,7 @@ void DisplayList::destroyDisplayListDeferred(DisplayList* displayList) {
 
 void DisplayList::clearResources() {
     sk_free((void*) mReader.base());
+    mReader.setMemory(NULL, 0);
 
     delete mTransformMatrix;
     delete mTransformCamera;
@@ -206,18 +207,19 @@ void DisplayList::clearResources() {
 
 void DisplayList::initFromDisplayListRenderer(const DisplayListRenderer& recorder, bool reusing) {
     const SkWriter32& writer = recorder.writeStream();
-    init();
-
-    if (writer.size() == 0) {
-        return;
-    }
 
     if (reusing) {
         // re-using display list - clear out previous allocations
         clearResources();
     }
+
+    init();
     initProperties();
 
+    if (writer.size() == 0) {
+        return;
+    }
+
     mSize = writer.size();
     void* buffer = sk_malloc_throw(mSize);
     writer.flatten(buffer);
@@ -278,6 +280,7 @@ void DisplayList::initFromDisplayListRenderer(const DisplayListRenderer& recorde
 void DisplayList::init() {
     mSize = 0;
     mIsRenderable = true;
+    mFunctorCount = 0;
 }
 
 size_t DisplayList::getSize() {
-- 
1.8.1.1

