From 5437e94510baae1530bbf62fc904695b7eeaf395 Mon Sep 17 00:00:00 2001
From: Steve Kondik <shade@chemlab.org>
Date: Sat, 20 Nov 2010 02:14:51 -0500
Subject: [PATCH] bionic: Add NASTY_PTHREAD_CREATE_HACK

This is a workaround for bad linkage of proprietary libs on certain
devices. Thanks to Zinx for tracking it down.

Change-Id: I6cc19ac70e8d3be911a7eeb6d05c05fec1387c05
---
 libc/Android.mk        |    4 ++++
 libc/bionic/pthread.c  |    7 +++++++
 libc/include/pthread.h |    4 ++++
 3 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/libc/Android.mk b/libc/Android.mk
index b10f311..7a2937a 100644
--- a/libc/Android.mk
+++ b/libc/Android.mk
@@ -459,6 +459,10 @@ else # !arm
   endif # x86
 endif # !arm
 
+ifeq ($(BOARD_USE_NASTY_PTHREAD_CREATE_HACK),true)
+  libc_common_cflags += -DNASTY_PTHREAD_CREATE_HACK
+endif
+
 # Define some common includes
 # ========================================================
 libc_common_c_includes := \
diff --git a/libc/bionic/pthread.c b/libc/bionic/pthread.c
index e17e366..07791ae 100644
--- a/libc/bionic/pthread.c
+++ b/libc/bionic/pthread.c
@@ -360,6 +360,13 @@ int pthread_create(pthread_t *thread_out, pthread_attr_t const * attr,
     return 0;
 }
 
+#ifdef NASTY_PTHREAD_CREATE_HACK
+int _debug_pthread_create(void *debug0, void *debug1, pthread_t *thread,
+        const pthread_attr_t *attr, void *(*start_routine) (void *), void *arg)
+{
+    return pthread_create(thread, attr, start_routine, arg);
+}
+#endif
 
 int pthread_attr_init(pthread_attr_t * attr)
 {
diff --git a/libc/include/pthread.h b/libc/include/pthread.h
index ecabdb1..7ae8148 100644
--- a/libc/include/pthread.h
+++ b/libc/include/pthread.h
@@ -138,6 +138,10 @@ int pthread_getattr_np(pthread_t thid, pthread_attr_t * attr);
 
 int pthread_create(pthread_t *thread, pthread_attr_t const * attr,
                    void *(*start_routine)(void *), void * arg);
+#ifdef NASTY_PTHREAD_CREATE_HACK
+int _debug_pthread_create(void *debug0, void *debug1, pthread_t *thread,
+                   const pthread_attr_t *attr, void *(*start_routine) (void *), void *arg);
+#endif
 void pthread_exit(void * retval);
 int pthread_join(pthread_t thid, void ** ret_val);
 int pthread_detach(pthread_t  thid);
-- 
1.7.1

